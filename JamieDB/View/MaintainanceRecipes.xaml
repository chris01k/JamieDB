<Window x:Class="JamieDB.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:JamieDB"
        xmlns:viewmodel="clr-namespace:JamieDB.ViewModel"
        mc:Ignorable="d"
        Title="Jamie Database" Height="850" Width="1250">

    <Window.Resources>
        <viewmodel:MaintainanceRecipesViewModel x:Key="viewModel"/>
    </Window.Resources>

    <TabControl Margin="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{x:Null}">
        <!-- Recipes -->
        <TabItem Header="Recipes">
            <Grid ShowGridLines="False">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="57*"/>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="75*"/>
                    <ColumnDefinition Width="8*"/>
                    <ColumnDefinition Width="37*"/>
                    <ColumnDefinition Width="97*"/>
                    <ColumnDefinition Width="56*"/>
                    <ColumnDefinition Width="111*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Menu Grid.Row="1" Grid.ColumnSpan="8">
                    <MenuItem Header="Recipe">

                    </MenuItem>
                </Menu>

                <ComboBox Grid.Row="2" Grid.ColumnSpan="8" Margin="5,5,5,6" ItemsSource="{Binding Recipes, Mode=TwoWay, Source={StaticResource viewModel}}" DisplayMemberPath="Name"
               SelectedItem="{Binding SelectedRecipe, Mode=TwoWay, Source={StaticResource viewModel}}"/>

                <Label Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,32,0,0" Grid.RowSpan="2">Name</Label>
                <TextBox Grid.Row="3" Grid.Column="2" Text="{Binding SelectedRecipe.Name , Source={StaticResource viewModel}, Mode=TwoWay}" Margin="0,4,5,5" Grid.ColumnSpan="4"></TextBox>

                <Label Grid.Row="2" Grid.Column="6" Grid.ColumnSpan="2" Margin="0,32,105,0" Grid.RowSpan="2">Portions</Label>
                <TextBox Grid.Row="3" Grid.Column="7" Text="{Binding SelectedRecipe.PortionQuantity , Source={StaticResource viewModel}, Mode=TwoWay}" Margin="5,4,4,5"></TextBox>


                <Label Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,0,0,212" Grid.RowSpan="2">Source</Label>
                <TextBox Grid.Row="4" Grid.Column="2" Text="{Binding SelectedRecipe.Source, Source={StaticResource viewModel}}" Margin="0,5,5,4" Grid.ColumnSpan="4"></TextBox>

                <Label Grid.Row="4" Grid.Column="6" Grid.ColumnSpan="2" Margin="0,0,105,212" Grid.RowSpan="2">Page</Label>
                <TextBox Grid.Row="4" Grid.Column="7" Text="{Binding SelectedRecipe.SourcePage, Source={StaticResource viewModel}}" Margin="5,5,4,4"></TextBox>


                <StackPanel Grid.Row="2" Grid.Column="8"  Orientation="Vertical" Grid.RowSpan="4" Margin="0,0,0,212">
                    <Button Content="New" Margin="5" Command="{Binding NewFoodPlanCommand, Source={StaticResource viewModel}}" />
                    <Button Content="Delete" Margin="5" Command="{Binding DeleteRecipeCommand, Source={StaticResource viewModel}}" />
                    <Button Content="Copy" Margin="5" IsEnabled="False" />
                </StackPanel>

                <DataGrid Grid.Row="5" Grid.ColumnSpan="8" Grid.RowSpan="2" Margin="5,6,5,5" AutoGenerateColumns="False" ItemsSource="{Binding RecipeIngredients, Source={StaticResource viewModel}, Mode=TwoWay}"
                      AlternationCount="2"
                      RowBackground="White"
                      AlternatingRowBackground="LightCyan"
                      SelectedItem="{Binding SelectedRecipeIngredient, Mode=TwoWay, Source={StaticResource viewModel}}">

                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Quantity" Width="3*" Binding= "{Binding Path=Quantity, Mode=TwoWay}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Right" ></Setter>
                                    <Setter Property="Margin" Value="0,0,5,0"></Setter>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridComboBoxColumn Header="Unit" Width="2*" 
                                        ItemsSource="{Binding UnitVM.Units, Source={StaticResource viewModel}}"
                                        DisplayMemberPath="Symbol"
                                        SelectedItemBinding="{Binding Unit}">
                        </DataGridComboBoxColumn>
                        <DataGridComboBoxColumn Header="Ingredient" Width="8*" 
                                        ItemsSource="{Binding IngredientVM.Ingredients, Source={StaticResource viewModel}}"
                                        DisplayMemberPath="Name" SelectedItemBinding="{Binding Ingredient}"/>
                    </DataGrid.Columns>
                </DataGrid>

                <StackPanel Grid.Row="5" Grid.Column="8" Orientation="Vertical" Margin="0,1,0,0">
                    <Button Content="New" Margin="5" Command="{Binding NewRecipeIngredientCommand, Mode=OneWay, Source={StaticResource viewModel}}" />
                    <Button Content="Delete" Margin="5" Command="{Binding DeleteRecipeIngredientCommand, Source={StaticResource viewModel}}" />
                </StackPanel>
                <Button Grid.Row="6" Grid.Column="8" Content="Save" Margin="5" Width="70" Command="{Binding SaveCommand, Mode=TwoWay, Source={StaticResource viewModel}}" />
                <StatusBar Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="9" Margin="5">
                    <StatusBarItem>
                        <TextBlock FontSize="10" Text="{Binding StatusBarMessage, Source={StaticResource viewModel}}" ></TextBlock>
                    </StatusBarItem>
                </StatusBar>

            </Grid>
        </TabItem>

        <!-- Tab Ingredients -->

        <TabItem Header="Ingredients">
            <Grid ShowGridLines="False">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="2*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="17"/>
                    <ColumnDefinition Width="117"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBox Grid.Row="0" Grid.Column="0" Margin="5" Width="Auto" Text="{Binding IngredientVM.SelectedIngredient.Id, Source={StaticResource viewModel}}" IsReadOnly="True" Grid.ColumnSpan="2" ></TextBox>
                <ComboBox Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="3" Margin="5" ItemsSource="{Binding IngredientVM.Ingredients, Source={StaticResource viewModel}}" DisplayMemberPath="Name"
                          SelectedItem="{Binding IngredientVM.SelectedIngredient, Source={StaticResource viewModel}}"></ComboBox>
                <Button Content="New" Grid.Row="0" Grid.Column="5" Margin="5" Width="70" Command="{Binding IngredientVM.NewIngredientCommand, Source={StaticResource viewModel}}" />

                <TextBox Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="3" Margin="5" Text="{Binding IngredientVM.SelectedIngredient.Name, Source={StaticResource viewModel}}"></TextBox>
                <Button Content="Delete" Grid.Row="1" Grid.Column="5" Margin="5" Width="70" Command="{Binding DeleteIngredientCommand, Source={StaticResource viewModel}}" />

                <Label Grid.Row="2" Grid.Column="0" Margin="2" FlowDirection="RightToLeft" Grid.ColumnSpan="2" >TargetUnit</Label>
                <ComboBox Grid.Row="2" Grid.Column="2" Margin="5" 
                          ItemsSource="{Binding UnitVM.Units, Source={StaticResource viewModel}}" 
                          DisplayMemberPath="Symbol" 
                          SelectedValue="{Binding IngredientVM.SelectedIngredient.Unit, Source={StaticResource viewModel}}"/>


                <Label Grid.Row="3" Grid.Column="0" Margin="5" FlowDirection="RightToLeft" Grid.ColumnSpan="2">Type</Label>
                <ComboBox Grid.Row="3" Grid.Column="2" Margin="5"
                          ItemsSource="{Binding IngredientVM.IngredientTypes, Source={StaticResource viewModel}}" 
                          DisplayMemberPath="Name" 
                          SelectedItem="{Binding IngredientVM.SelectedIngredient.IngredientType, Source={StaticResource viewModel}}" 
                          ></ComboBox>

                <Label Grid.Row="4" Grid.Column="0" Margin="2" FlowDirection="RightToLeft" Grid.ColumnSpan="2" >Flags</Label>
                <GroupBox Grid.Row="4" Grid.Column="2" Margin="5" Grid.ColumnSpan="3">
                    <WrapPanel Orientation="Horizontal">
                        <CheckBox Margin="5" Width="80" IsChecked="{Binding IngredientVM.SelectedIngredient.IsVegetarian, Source={StaticResource viewModel}}" >vegetarisch</CheckBox>
                        <CheckBox Margin="5" Width="80" IsChecked="{Binding IngredientVM.SelectedIngredient.IsVegan, Source={StaticResource viewModel}}">vegan</CheckBox>
                        <CheckBox Margin="5" Width="80" IsChecked="{Binding IngredientVM.SelectedIngredient.IsLowCarb, Source={StaticResource viewModel}}">Low Carb</CheckBox>
                        <CheckBox Margin="5" Width="80" IsChecked="{Binding IngredientVM.SelectedIngredient.IsLowFat, Source={StaticResource viewModel}}">Low Fat</CheckBox>
                    </WrapPanel>
                </GroupBox>

                <Label  Grid.Row="5" Grid.Column="0" Margin="2" FlowDirection="RightToLeft" Grid.ColumnSpan="2">Ingredient Translations</Label>
                <DataGrid Grid.Row="5" Grid.Column="2" Grid.ColumnSpan="3" Margin="5" ItemsSource="{Binding IngredientVM.IngredientTranslations, Source={StaticResource viewModel}}" SelectedItem="{Binding IngredientVM.SelectedIngredientTranslation, Source={StaticResource viewModel}}" AutoGenerateColumns="False" IsReadOnly="True" >
                    <DataGrid.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Factor}" Value="0">
                                    <Setter Property="Foreground" Value="Red"></Setter>
                                    <Setter Property="FontWeight" Value="Bold"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>

                    <DataGrid.Columns>
                        <DataGridComboBoxColumn Header="Base" Width="*"
                                ItemsSource="{Binding UnitVM.Units, Source={StaticResource viewModel}}"
                                DisplayMemberPath="Symbol"
                                SelectedItemBinding="{Binding BaseUnit}">
                        </DataGridComboBoxColumn>
                        <DataGridTextColumn Header="Factor" Binding="{Binding Factor}"/>
                        <DataGridComboBoxColumn Header="Target" Width="*"
                                ItemsSource="{Binding UnitVM.Units, Source={StaticResource viewModel}}"
                                DisplayMemberPath="Symbol"
                                SelectedItemBinding="{Binding TargetUnit}">
                        </DataGridComboBoxColumn>
                        <DataGridTextColumn Header="Recipe" Binding="{Binding RelatedRecipe.Name}" Width="3*"/>
                    </DataGrid.Columns>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="AddingNewItem">
                            <i:InvokeCommandAction Command="{Binding AddingNewUnitTranslation}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                </DataGrid>

                <Label  Grid.Row="6" Grid.Column="0" Margin="2" FlowDirection="RightToLeft" Grid.ColumnSpan="2">Unit Translations</Label>
                <DataGrid Grid.Row="6" Grid.Column="2" Grid.ColumnSpan="3" Margin="5" ItemsSource="{Binding IngredientVM.UnitTranslations, Source={StaticResource viewModel}}" SelectedItem="{Binding IngredientVM.SelectedUnitTranslation, Source={StaticResource viewModel}}" AutoGenerateColumns="False" >
                    <DataGrid.Columns>
                        <DataGridComboBoxColumn Header="Base" Width="*"
                                ItemsSource="{Binding UnitVM.Units, Source={StaticResource viewModel}}"
                                DisplayMemberPath="Symbol"
                                SelectedItemBinding="{Binding Unit}">
                        </DataGridComboBoxColumn>
                        <DataGridTextColumn Header="Factor" Binding="{Binding Factor}"/>
                        <DataGridComboBoxColumn Header="Target" Width="*"
                                ItemsSource="{Binding UnitVM.Units, Source={StaticResource viewModel}}"
                                DisplayMemberPath="Symbol"
                                SelectedItemBinding="{Binding Unit1}">
                        </DataGridComboBoxColumn>
                        <DataGridTextColumn Header="Ingredient" Binding="{Binding Ingredient.Name}" Width="3*" IsReadOnly="True"/>
                    </DataGrid.Columns>
                </DataGrid>

                <Button Grid.Row="7" Grid.Column="5" Content="Save" Margin="5" Width="70" Command="{Binding SaveCommand, Mode=TwoWay, Source={StaticResource viewModel}}" />
                <StatusBar Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="5" Margin="5">
                    <StatusBarItem>
                        <TextBlock FontSize="10" Text="{Binding IngredientVM.StatusBarMessage, Source={StaticResource viewModel}}" ></TextBlock>
                    </StatusBarItem>
                </StatusBar>

            </Grid>
        </TabItem>

        <!-- Tab Units -->

        <TabItem Header="Units">
            <DockPanel LastChildFill="True">
                <Label  DockPanel.Dock="Top" Margin="5">Units</Label>
                <DataGrid DockPanel.Dock="Top" Margin="5" AutoGenerateColumns="False"
                     
                      AlternationCount="2"
                      RowBackground="White"
                      AlternatingRowBackground="LightCyan"
                      ItemsSource="{Binding UnitVM.Units, Source={StaticResource viewModel}}"
                      SelectedItem="{Binding UnitVM.SelectedUnit, Source={StaticResource viewModel}, Mode=TwoWay}" SelectionMode="Single" Cursor="Cross" 
                      >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="CellEditEnding">
                            <ei:CallMethodAction TargetObject="{Binding UnitVM}" MethodName="SomeMethod"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Symbol" Binding="{Binding Symbol}" Width="1*"/>
                        <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="3*"/>
                        <DataGridCheckBoxColumn Header="Standard" Binding="{Binding TypeStandard}" Width="1*"/>
                        <DataGridTextColumn Header="Factor" Binding="{Binding TypeFactor, StringFormat=\{0:n6\}}" Width="1*"/>
                        <DataGridComboBoxColumn Header="Unit Type" Width="1*"
                                ItemsSource="{Binding UnitVM.UnitTypes, Source={StaticResource viewModel}}"
                                DisplayMemberPath="Name"
                                SelectedItemBinding="{Binding Path=UnitType}">
                        </DataGridComboBoxColumn>
                        <DataGridCheckBoxColumn Header="Universal" Binding="{Binding TypeUniversal}" Width="1*"/>
                    </DataGrid.Columns>

                </DataGrid>
                <Label DockPanel.Dock="Top" Margin="5" VerticalAlignment="Bottom">Unit Translations</Label>

                <DataGrid DockPanel.Dock="Top"
                          
                      Margin="5" AutoGenerateColumns="False"
                      Height="242"
                      AlternationCount="2"
                      RowBackground="White"
                      AlternatingRowBackground="LightCyan"
                      ItemsSource="{Binding UnitVM.UnitTranslations, Source={StaticResource viewModel}}"
                      SelectedItem="{Binding UnitVM.SelectedUnitTranslation, Source={StaticResource viewModel}}">

                    <DataGrid.Columns>
                        <DataGridComboBoxColumn Header="Ingredient" Width="3*"
                                ItemsSource="{Binding IngredientVM.Ingredients, Source={StaticResource viewModel}}"
                                DisplayMemberPath="Symbol"
                                SelectedItemBinding="{Binding Ingredient}">
                        </DataGridComboBoxColumn>
                        <DataGridComboBoxColumn Header="BaseUnit" Width="*"
                                ItemsSource="{Binding UnitVM.Units, Source={StaticResource viewModel}}"
                                DisplayMemberPath="Symbol"
                                SelectedItemBinding="{Binding Unit}">
                        </DataGridComboBoxColumn>
                        <DataGridComboBoxColumn Header="TargetUnit" Width="*"
                                ItemsSource="{Binding UnitVM.Units, Source={StaticResource viewModel}}"
                                DisplayMemberPath="Symbol"
                                SelectedItemBinding="{Binding Unit1}">
                        </DataGridComboBoxColumn>
                        <DataGridTextColumn Header="Factor" Binding="{Binding Factor}"/>
                        <!--                          <DataGridComboBoxColumn Header="BaseUnit" Width="2*"
                                ItemsSource="{Binding UnitVM.Units, Source={StaticResource viewModel}}"
                                DisplayMemberPath="Symbol"
                                SelectedItemBinding="{Binding Path=Unit}">
                        </DataGridComboBoxColumn>
                        <DataGridCheckBoxColumn Header="Ingredient" Binding="{Binding IsIngredientDependent}"/>
                -->
                    </DataGrid.Columns>

                </DataGrid>
                <StatusBar DockPanel.Dock="Bottom" VerticalAlignment="Bottom" Margin="3,5,5,5">
                    <StatusBarItem>
                        <TextBlock FontSize="10" Text="{Binding UnitVM.StatusBarMessage, Source={StaticResource viewModel}}" ></TextBlock>
                    </StatusBarItem>
                </StatusBar>

            </DockPanel>
        </TabItem
                 >

        <!-- Tab Food Plan -->

        <TabItem Header="Food Plan" Visibility="Collapsed">
            <Grid ShowGridLines="False">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="132"/>
                    <ColumnDefinition Width="54"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <DatePicker Grid.Row="0" Grid.Column="0" Margin="5" 
                            DisplayDate="{Binding SelectedFoodPlanDate, Source={StaticResource viewModel}}" SelectedDate="{Binding SelectedFoodPlanDate, Source={StaticResource viewModel}}" 
                            SelectedDateFormat="Long" Grid.ColumnSpan="2"/>
                <DataGrid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Margin="5" AutoGenerateColumns="False"
                          ItemsSource="{Binding FoodPlanItems, Source={StaticResource viewModel}}"
                          AlternationCount="2"
                          RowBackground="White"
                          AlternatingRowBackground="LightCyan" SelectedItem="{Binding SelectedFoodPlanItem, Source={StaticResource viewModel}}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Date" Width="3*" 
                                            Binding= "{Binding DateTime, StringFormat={}{0:dd.MM.yyyy}}" IsReadOnly="True"/>

                        <DataGridTextColumn Header="Time" Width="2*" Binding= "{Binding DateTime, Mode=TwoWay, StringFormat={}{0:HH:mm}}"/>
                        <DataGridTextColumn Header="Portions" Width="2*" Binding= "{Binding PortionCount}"/>
                        <DataGridComboBoxColumn Header="Recipe" Width="8*" 
                                        ItemsSource="{Binding Recipes, Source={StaticResource viewModel}}"
                                        DisplayMemberPath="Name" SelectedItemBinding="{Binding Recipe}">
                        </DataGridComboBoxColumn>
                    </DataGrid.Columns>

                </DataGrid>
                <StackPanel Grid.Row="1" Grid.Column="3">
                    <Button Content="New" Margin="5" Width="70" Command="{Binding NewFoodPlanItemCommand, Source={StaticResource viewModel}}" />
                    <Button Content="Delete" Margin="5" Command="{Binding DeleteFoodPlanItemCommand, Source={StaticResource viewModel}}" />
                </StackPanel>
                <GroupBox Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" Margin="5">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="5*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Label Margin="5">Templates</Label>
                        <ComboBox Grid.Row="0" Grid.Column="1" Margin="5" Grid.ColumnSpan="2"
                                  ItemsSource="{Binding FoodPlanTemplates, Source={StaticResource viewModel}, Mode=TwoWay}"
                                  DisplayMemberPath="Name"  
                                  SelectedItem="{Binding SelectedFoodPlanTemplate, Source={StaticResource viewModel}}"/>
                        <Button Grid.Row="0" Grid.Column="3" Margin="5" Command="{Binding NewFoodPlanTemplateCommand, Source={StaticResource viewModel}}" >New</Button>
                        <TextBox Grid.Row="1" Grid.Column="1" Margin="5" Text="{Binding SelectedFoodPlanTemplate.Name, Source={StaticResource viewModel}}" ></TextBox>
                        <TextBox Grid.Row="1" Grid.Column="2" Margin="5" TextAlignment="Center"
                                 Text="{Binding SelectedFoodPlanTemplateItemCount, Mode=OneWay, Source={StaticResource viewModel}}" ></TextBox>
                        <Button Grid.Row="1" Grid.Column="3" Width="70" Margin="5" Command="{Binding LoadFoodPlanTemplateCommand, Source={StaticResource viewModel}}" >Load</Button>
                        <Label Grid.Row="2" Grid.Column="0"  Margin="5" Content="End" HorizontalAlignment="Right"/>
                        <DatePicker Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="5" DisplayDate="{Binding SelectedFoodPlanTemplateEndDate, Source={StaticResource viewModel}}" SelectedDateFormat="Long" SelectedDate="{Binding SelectedFoodPlanTemplateEndDate, Source={StaticResource viewModel}}"></DatePicker>
                        <Button Grid.Row="2" Grid.Column="3" Margin="5" Command="{Binding DeleteFoodPlanTemplateCommand, Source={StaticResource viewModel}}" >Delete</Button>
                    </Grid>
                </GroupBox>
                <Button Grid.Row="3" Grid.Column="3" Content="Save" Margin="5,0,5,5" VerticalAlignment="Bottom" Width="70" Command="{Binding SaveCommand, Mode=TwoWay, Source={StaticResource viewModel}}" />
                <StatusBar Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="4" Margin="5">
                    <StatusBarItem>
                        <TextBlock FontSize="10" Text="{Binding StatusBarMessage, Source={StaticResource viewModel}}" ></TextBlock>
                    </StatusBarItem>
                </StatusBar>
            </Grid>
        </TabItem>

        <TabItem Header="Food Plan">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="5" VerticalAlignment="Center" TextAlignment="Right" Width="Auto">Name</TextBlock>
                        <TextBox Margin="5" VerticalAlignment="Center" Text="{Binding FoodPlanVM.SelectedFoodPlan.Name, Source={StaticResource viewModel}}"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="5" VerticalAlignment="Center" TextAlignment="Right" >Description</TextBlock>
                        <TextBox Margin="5" VerticalAlignment="Center" Text="{Binding FoodPlanVM.SelectedFoodPlan.Description, Source={StaticResource viewModel}}"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="5" VerticalAlignment="Center" TextAlignment="Right" Width="Auto">Range</TextBlock>
                        <DatePicker Margin="5" SelectedDate="{Binding FoodPlanVM.SelectedFoodPlan.StartDate, Source={StaticResource viewModel}}"></DatePicker>
                        <DatePicker Margin="5" SelectedDate="{Binding FoodPlanVM.CalculatedFoodPlanEndDate, Source={StaticResource viewModel}}"></DatePicker>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="5" VerticalAlignment="Center" TextAlignment="Right" Width="Auto">Default Portions</TextBlock>
                        <TextBox Margin="5" VerticalAlignment="Center">2</TextBox>
                        <TextBlock Margin="5" VerticalAlignment="Center" TextAlignment="Right" Width="Auto">Owner</TextBlock>
                        <ComboBox Margin="5" VerticalAlignment="Center" 
                                  ItemsSource="{Binding FoodPlanVM.UserList, Source={StaticResource viewModel}}" 
                                  SelectedItem="{Binding FoodPlanVM.SelectedFoodPlan.User, Source={StaticResource viewModel}}"
                                  DisplayMemberPath="Name" 
                                  ></ComboBox>
                    </StackPanel>
                </StackPanel>
                <Border Margin="5" Grid.Row="0" Grid.Column="2"  BorderThickness="1" BorderBrush="Gray" CornerRadius="3">
                    <StackPanel>
                        <ComboBox Margin="5" SelectedItem="{Binding FoodPlanVM.SelectedFoodPlanFromList, Source={StaticResource viewModel}}" 
                                  ItemsSource="{Binding FoodPlanVM.FoodPlanList, Source={StaticResource viewModel}}"
                                  DisplayMemberPath="Name">
                            
                        </ComboBox>
                        <Button Margin="5" Command="{Binding FoodPlanVM.NewFoodPlanCommand, Source={StaticResource viewModel}}">New</Button>
                        <Button Margin="5" Command="{Binding FoodPlanVM.LoadFoodPlanCommand, Source={StaticResource viewModel}}">Load</Button>
                        <Button Margin="5" Command="{Binding FoodPlanVM.InsertFoodPlanCommand, Source={StaticResource viewModel}}">Insert</Button>
                        <Separator Margin="5"/>
                        <Button Margin="5" Command="{Binding FoodPlanVM.DeleteFoodPlanCommand, Source={StaticResource viewModel}}">Delete</Button>
                        <Button Margin="5" Command="{Binding FoodPlanVM.SaveFoodPlanCommand, Source={StaticResource viewModel}}">Save</Button>
                    </StackPanel>
                </Border>


                <Border Margin="5" Grid.Row="1" Grid.Column="0" Grid.RowSpan="3" BorderThickness="1" BorderBrush="Gray" CornerRadius="3">
                    <StackPanel Orientation="Vertical">
                        <TextBox Text="{Binding FoodPlanVM.RecipeListFilter, Source={StaticResource viewModel}, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                        <DataGrid  Margin="9,1,1,9" AutoGenerateColumns="False"
                          ItemsSource="{Binding FoodPlanVM.RecipeListFiltered, Source={StaticResource viewModel}}"
                          AlternationCount="2"
                          RowBackground="White"
                          AlternatingRowBackground="LightBlue" SelectedItem="{Binding FoodPlanVM.SelectedRecipeFromList, Source={StaticResource viewModel}}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Recipe" Binding="{Binding Name}" Width="*">
                            </DataGridTextColumn>
                       </DataGrid.Columns>
                     </DataGrid>
                    </StackPanel>
                </Border>


                <Border Margin="5" Grid.Row="1" Grid.Column="2" BorderThickness="1" BorderBrush="Gray" CornerRadius="3">
                    <StackPanel>
                        <TextBlock Margin="5">-->Food Plan</TextBlock>
                        <DockPanel>
                            <TextBlock Margin="5" DockPanel.Dock="Left">Portions:</TextBlock>
                            <TextBox Margin="5" DockPanel.Dock="Right" Text="{Binding FoodPlanVM.DefaultPortions, Source={StaticResource viewModel} }"></TextBox>
                        </DockPanel>
                        <Button Margin="5" Command="{Binding FoodPlanVM.AddBreakfastCommand, Source={StaticResource viewModel}}">Breakfast</Button>
                        <Button Margin="5" Command="{Binding FoodPlanVM.AddLunchCommand, Source={StaticResource viewModel}}">Lunch</Button>
                        <Button Margin="5" Command="{Binding FoodPlanVM.AddDinnerCommand, Source={StaticResource viewModel}}">Dinner</Button>
                        <Button Margin="5" Command="{Binding FoodPlanVM.AddSnackCommand, Source={StaticResource viewModel}}">Snack</Button>
                        <Separator Margin="5"/>
                        <DatePicker  Margin="5" SelectedDateFormat="Long" SelectedDate="{Binding FoodPlanVM.SelectedDateTime, Source={StaticResource viewModel}}" />
                        <TextBox Margin="5" Text="{Binding FoodPlanVM.SelectedDateTime, Source={StaticResource viewModel},Mode=TwoWay, StringFormat={}{0:HH:mm}}"/>
                        <Button Margin="5" >Selected</Button>
                        <Separator Margin="5"/>
                        <Button Margin="5" Command="{Binding FoodPlanVM.DeleteFoodPlanItemCommand, Source={StaticResource viewModel}}">Delete</Button>
                    </StackPanel>
                </Border>
                <Border Margin="5" Grid.Row="1" Grid.Column="1" Grid.RowSpan="3" BorderThickness="1" BorderBrush="Gray" CornerRadius="3">
                    <StackPanel ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto">
                    <DataGrid  Margin="5" AutoGenerateColumns="False"
                          ItemsSource="{Binding FoodPlanVM.SelectedFoodPlanItemsList, Source={StaticResource viewModel}}"
                          
                          AlternationCount="2"
                          RowBackground="White"
                          AlternatingRowBackground="LightBlue" SelectedItem="{Binding FoodPlanVM.SelectedFoodPlanItem, Source={StaticResource viewModel}}" Height="489">
                        <DataGrid.Columns>

                                <DataGridTemplateColumn Header="Food Plan" Width="*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <WrapPanel>
                                                <TextBlock Margin="2" Text="{Binding DateTime, StringFormat={}{0:dd.MM.yyyy}}"></TextBlock>
                                                <TextBlock Margin="2" Text="{Binding DateTime, Mode=TwoWay, StringFormat={}{0:HH:mm}}"></TextBlock>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Margin="2" Text="{Binding PortionCount}"></TextBlock>
                                                    <TextBlock Margin="2" Text="x"></TextBlock>
                                                    <TextBlock Margin="2" Text="{Binding Recipe.Name}"></TextBlock>
                                                </StackPanel>
                                            </WrapPanel>
                                        </DataTemplate>
                                        
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            
<!--                            <DataGridTextColumn Header="Date" Width="3*" 
                                            Binding= "{Binding DateTime, StringFormat={}{0:dd.MM.yyyy}}" IsReadOnly="True"/>

                            <DataGridTextColumn Header="Time" Width="2*" Binding= "{Binding DateTime, Mode=TwoWay, StringFormat={}{0:HH:mm}}"/>
                            <DataGridTextColumn Header="Portions" Width="2*" Binding= "{Binding PortionCount}"/>
                            <DataGridComboBoxColumn Header="Recipe" Width="8*" 
                                        ItemsSource="{Binding Recipes, Source={StaticResource viewModel}}"
                                        DisplayMemberPath="Name" SelectedItemBinding="{Binding Recipe}">
                            </DataGridComboBoxColumn>
-->                           
                        </DataGrid.Columns>
                    </DataGrid>
                    </StackPanel>
                </Border>

                <StackPanel Grid.Column="0" Grid.Row="4"  Grid.ColumnSpan="4">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Width="50" Margin="5">Cancel</Button>
                        <Button Width="50" Margin="5">OK</Button>
                    </StackPanel>   
                <StatusBar Margin="5" VerticalAlignment="Bottom" >
                    <StatusBarItem>
                        <TextBlock FontSize="10" Text="{Binding FoodPlanVM.StatusBarMessage, Source={StaticResource viewModel}}" ></TextBlock>
                    </StatusBarItem>
                </StatusBar>
                </StackPanel>
            </Grid>
        </TabItem>

        <!-- Tab Shopping List -->
        <TabItem Header="Shopping List">
            <Grid ShowGridLines="True">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Label Grid.Row="0" Grid.Column="0" Margin="2" FlowDirection="RightToLeft" >Zeitraum</Label>
                <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
                    <Label Margin="2">Start:</Label>
                    <DatePicker Margin="3"></DatePicker>
                    <Label Margin="2">Ende:</Label>
                    <DatePicker Margin="3"></DatePicker>
                </StackPanel>



                <DataGrid Grid.Row="1" Grid.Column="1" Margin="5" AutoGenerateColumns="False"
                          AlternationCount="2"
                          RowBackground="White"
                          AlternatingRowBackground="LightCyan">

                    <DataGrid.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding TargetUnitQuantity}" Value="0">
                                    <Setter Property="Foreground" Value="Red"></Setter>
                                    <Setter Property="FontWeight" Value="Bold"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>

                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Date" Binding= "{Binding FoodPlanItem.DateTime, StringFormat=\{0:dd.MM.yyyy\}}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Ingredient" Binding= "{Binding Ingredient.Name}"/>
                        <DataGridTextColumn Header="RUnit" Binding= "{Binding RecipeIngredient.Unit.Symbol}" />
                        <DataGridTextColumn Header="Quantity" Binding= "{Binding TargetUnitQuantity}" />
                        <DataGridTextColumn Header="TUnit" Binding= "{Binding Ingredient.Unit.Symbol}" />
                        <DataGridTextColumn Header="Recipe" Binding= "{Binding Recipe.Name}"/>

                        <!--                     <DataGridTextColumn Header="Time" Binding= "{Binding FoodPlanDate, Mode=OneWay, StringFormat={}{0:HH:mm}}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Quantity" Binding= "{Binding Quantity, Mode=OneWay, StringFormat={}{0:##.00}}" IsReadOnly="True">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Right" ></Setter>
                                    <Setter Property="Margin" Value="0,0,5,0"></Setter>
                                </Style>
                            </DataGridTextColumn.ElementStyle>

                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Unit" Binding= "{Binding Unit, Mode=OneWay}" IsReadOnly="True">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Right" ></Setter>
                                    <Setter Property="Margin" Value="0,0,5,0"></Setter>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Ingredient" Binding= "{Binding Ingredient, Mode=OneWay}" IsReadOnly="True">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Center" ></Setter>
                                    <Setter Property="Margin" Value="0,0,5,0"></Setter>
                                </Style>
                            </DataGridTextColumn.ElementStyle>

                        </DataGridTextColumn>
                       -->
                    </DataGrid.Columns>

                </DataGrid>

                <Button Grid.Row="2" Grid.Column="2" Content="Save" Margin="5" VerticalAlignment="Bottom" Width="70" Command="{Binding SaveCommand, Mode=TwoWay, Source={StaticResource viewModel}}" />
                <StatusBar Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="5">
                    <StatusBarItem>
                        <TextBlock FontSize="10" Text="{Binding StatusBarMessage, Source={StaticResource viewModel}}" ></TextBlock>
                    </StatusBarItem>
                </StatusBar>
            </Grid>
        </TabItem>

        <!-- Tab Stock -->
        <TabItem Header="Stock" Visibility="Collapsed" >
            <Calendar SelectionMode="SingleRange"/>
        </TabItem>


        <!-- Tab Users -->
        <TabItem Header="Users"  >
            
        </TabItem>
    </TabControl>
</Window>